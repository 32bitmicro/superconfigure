--- binutils-2.42/opcodes/sysdep.h	2024-01-29 00:00:00.000000000 +0000
+++ -	2024-02-11 18:40:16.532179291 +0000
@@ -46,7 +46,7 @@
    It is faster than setjmp/longjmp on systems where the signal mask is
    saved.  */
 
-#if defined(HAVE_SIGSETJMP)
+#if 0 && defined(HAVE_SIGSETJMP)
 #define OPCODES_SIGJMP_BUF		sigjmp_buf
 #define OPCODES_SIGSETJMP(buf)		sigsetjmp((buf), 0)
 #define OPCODES_SIGLONGJMP(buf,val)	siglongjmp((buf), (val))
--- binutils-2.42/bfd/peicode.h	2024-01-29 00:00:00.000000000 +0000
+++ -	2024-02-11 18:41:30.075243380 +0000
@@ -1537,7 +1537,7 @@
       if (opthdr == NULL)
 	return NULL;
       if (amt > opt_hdr_size)
-	memset (opthdr + opt_hdr_size, 0, amt - opt_hdr_size);
+	memset ((char *)opthdr + opt_hdr_size, 0, amt - opt_hdr_size);
 
       bfd_coff_swap_aouthdr_in (abfd, opthdr, &internal_a);
 
--- binutils-2.42/config.sub	2024-02-11 18:42:05.933333297 +0000
+++ -	2024-02-11 18:43:04.377630922 +0000
@@ -1721,7 +1721,7 @@
 
 case $os in
 	# Sometimes we do "kernel-libc", so those need to count as OSes.
-	musl* | newlib* | relibc* | uclibc*)
+	cosmo* | musl* | newlib* | relibc* | uclibc*)
 		;;
 	# Likewise for "kernel-abi"
 	eabi* | gnueabi*)
@@ -1819,7 +1819,7 @@
 # (given a valid OS), if there is a kernel.
 case $kernel-$os-$obj in
 	linux-gnu*- | linux-dietlibc*- | linux-android*- | linux-newlib*- \
-		   | linux-musl*- | linux-relibc*- | linux-uclibc*- | linux-mlibc*- )
+		   | linux-cosmo*- | linux-musl*- | linux-relibc*- | linux-uclibc*- | linux-mlibc*- )
 		;;
 	uclinux-uclibc*- )
 		;;
@@ -1827,7 +1827,7 @@
 		;;
 	windows*-msvc*-)
 		;;
-	-dietlibc*- | -newlib*- | -musl*- | -relibc*- | -uclibc*- | -mlibc*- )
+	-dietlibc*- | -newlib*- | -cosmo*- | -musl*- | -relibc*- | -uclibc*- | -mlibc*- )
 		# These are just libc implementations, not actual OSes, and thus
 		# require a kernel.
 		echo "Invalid configuration '$1': libc '$os' needs explicit kernel." 1>&2
