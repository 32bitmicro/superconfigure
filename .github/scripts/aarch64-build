#!/usr/bin/env bash
set -e

echo "Initial Setup"
export ARCH=aarch64
export MODE=aarch64
export BASELOC=$(realpath $PWD)
export COSMO=$BASELOC/cosmopolitan
export COSMOS=$BASELOC/cosmos/$ARCH
export RESULTS=$BASELOC/bin

# cosmos
sudo ln -sf $COSMOS /zip

# build cosmo toolchain
cd $COSMO
make -s -j2 V=0 MODE="$MODE" toolchain
make -s -j2 V=0 MODE="$MODE" o//third_party/zlib
make -s -j2 V=0 MODE="$MODE" o//third_party/zlib/gz
make -s -j2 V=0 MODE="$MODE" o//third_party/zstd
make -s -j2 V=0 MODE="$MODE" o//third_party/sqlite3
make -s -j2 V=0 MODE="$MODE" o//third_party/sqlite3/libsqlite3.a
make -s -j2 V=0 MODE="$MODE" o//third_party/bzip2
make -s -j2 V=0 MODE="$MODE" o//tool/build/zipcopy.com
cd $BASELOC

# create the COSMOS folder
mkdir -p $COSMOS
cd $COSMOS
mkdir -p include bin lib libexec share
cd $BASELOC

echo "Setting up cosmocc"

PREFIX="$COSMO/bin/x86_64-unknown-cosmo"
export CC=$PREFIX-cc
export CXX=$PREFIX-c++
export LD=$PREFIX-cc
export OBJCOPY=$PREFIX-objcopy
export AR=$PREFIX-ar
export ZIPCOPY=$COSMO/o/tool/build/zipcopy.com

cd $BASELOC
$CC sample.c -o sample.com
./sample.com

echo "Setting up libz and libzstd in $COSMOS"
cd $COSMOS

# 
cp ./lib/libpthread.a ./lib/libcrypt.a

cp $COSMO/o/$MODE/third_party/zlib/zlib.a ./lib/libz.a
$AR rc ./lib/libz.a $COSMO/o/$MODE/third_party/zlib/gz/*.o
echo '#include "third_party/zlib/zlib.h"' >> ./include/zlib.h

cp $COSMO/o/$MODE/third_party/zstd/zstd.a ./lib/libzstd.a
echo '#include "third_party/zstd/zstd.h"' >> ./include/zstd.h

cp $COSMO/o/$MODE/third_party/bzip2/bzip2.a ./lib/libbz2.a
echo '#include "third_party/bzip2/bzlib.h"' >> ./include/bzlib.h

cp $COSMO/o/$MODE/third_party/sqlite3/libsqlite3.a ./lib/libsqlite3.a
echo '#include "third_party/sqlite3/sqlite3.h"' >> ./include/sqlite3.h

echo "building other packages"
cd $BASELOC

# order of PKGS matters
# brotli is crashing, so we disable it for now
PKGS=("ncurses-6.4" "readline-8.2" "openssl-1.1.1u" "gdbm-1.23" "libuuid-1.0.3" "libyaml-0.2.5" "xz-5.4.3" "cpy311-datasette" "cpy311-pypack1" "wget-1.21")

for PKG in ${PKGS[@]}; do
    cd "./$PKG"
    chmod +x ./superconfigure
    ./superconfigure
    cd $BASELOC
done
