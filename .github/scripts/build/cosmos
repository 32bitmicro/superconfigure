#!/usr/bin/env bash
set -e

make ARCH=x86_64 cosmos
make ARCH=aarch64 cosmos

export TARGET_ARCH=x86_64
make ARCH=x86_64 gcc
make ARCH=aarch64 gcc
rm gcc*.built.*
rm binutils*.built.*

export TARGET_ARCH=aarch64
make ARCH=x86_64 gcc
make ARCH=aarch64 gcc

# rm -f cosmo.setup.*

export MODE=
export MODE_AARCH64=aarch64
export BASELOC=$(realpath $PWD)
export COSMO=$BASELOC/cosmopolitan
export COSMOS_X86=$BASELOC/cosmos/x86_64
export COSMOS_AARCH64=$BASELOC/cosmos/aarch64
export CONFIGDIR=$BASELOC/dummy
export RESULTS=$BASELOC/results

APELINK=$COSMO/o//tool/build/apelink.com
APELINKFLAGS=

apelinkpls () {
    OUTPUT="$1"
    OUTPUT_X86_64="$2"
    OUTPUT_AARCH64="$3"
    OLDNAME_X86_64="$(basename -- $OUTPUT_X86_64)"
    OLDNAME_AARCH64="$(basename -- $OUTPUT_AARCH64)"
    TARG_FOLD="$(dirname $OUTPUT)"
    "$APELINK" -l "$COSMO/o/$MODE/ape/ape.elf" \
        -l "$COSMO/o/$MODE_AARCH64/ape/ape.elf" \
        -M "$COSMO/ape/ape-m1.c" \
        -o "$OUTPUT" \
        "$OUTPUT_X86_64" \
        "$OUTPUT_AARCH64"
    cp "$OUTPUT_X86_64" "$TARG_FOLD/$OLDNAME_X86_64.x86_64"
    cp "$OUTPUT_AARCH64" "$TARG_FOLD/$OLDNAME_AARCH64.aarch64"
}

echo "creating fat APEs"
mkdir -p "$CONFIGDIR"
mkdir -p "$RESULTS"

# aarch64-gcc

cd $BASELOC
ls -al ./

FILELIST='
bin/aarch64-linux-cosmo-addr2line
bin/aarch64-linux-cosmo-ar
bin/aarch64-linux-cosmo-as
bin/aarch64-linux-cosmo-c++
bin/aarch64-linux-cosmo-c++filt
bin/aarch64-linux-cosmo-cpp
bin/aarch64-linux-cosmo-elfedit
bin/aarch64-linux-cosmo-g++
bin/aarch64-linux-cosmo-gcc
bin/aarch64-linux-cosmo-gcc-ar
bin/aarch64-linux-cosmo-gcc-nm
bin/aarch64-linux-cosmo-gcc-ranlib
bin/aarch64-linux-cosmo-gprof
bin/aarch64-linux-cosmo-ld
bin/aarch64-linux-cosmo-ld.bfd
bin/aarch64-linux-cosmo-nm
bin/aarch64-linux-cosmo-objcopy
bin/aarch64-linux-cosmo-objdump
bin/aarch64-linux-cosmo-ranlib
bin/aarch64-linux-cosmo-readelf
bin/aarch64-linux-cosmo-size
bin/aarch64-linux-cosmo-strings
bin/aarch64-linux-cosmo-strip
libexec/gcc/aarch64-linux-cosmo/11.2.0/cc1
libexec/gcc/aarch64-linux-cosmo/11.2.0/cc1plus
libexec/gcc/aarch64-linux-cosmo/11.2.0/collect2
'
mkdir -p $RESULTS/bin
mkdir -p $RESULTS/libexec/gcc/aarch64-linux-cosmo/11.2.0/install-tools

for EXE in $FILELIST; do
    apelinkpls $RESULTS/$EXE.com\
        $COSMOS_X86/$EXE\
        $COSMOS_AARCH64/$EXE
done

# cosmo toolchain also has these binaries in the specific locations
DUPELIST2='
as
ld
ld.bfd
'

for EXE in $DUPELIST2; do
    cp $RESULTS/bin/aarch64-linux-cosmo-$EXE.com $RESULTS/libexec/gcc/aarch64-linux-cosmo/11.2.0/$EXE.com
done


# x86_64-gcc

cd $BASELOC
ls -al ./

FILELIST='
bin/x86_64-linux-cosmo-addr2line
bin/x86_64-linux-cosmo-ar
bin/x86_64-linux-cosmo-as
bin/x86_64-linux-cosmo-c++
bin/x86_64-linux-cosmo-c++filt
bin/x86_64-linux-cosmo-cpp
bin/x86_64-linux-cosmo-elfedit
bin/x86_64-linux-cosmo-g++
bin/x86_64-linux-cosmo-gcc
bin/x86_64-linux-cosmo-gcc-ar
bin/x86_64-linux-cosmo-gcc-nm
bin/x86_64-linux-cosmo-gcc-ranlib
bin/x86_64-linux-cosmo-gprof
bin/x86_64-linux-cosmo-ld
bin/x86_64-linux-cosmo-ld.bfd
bin/x86_64-linux-cosmo-nm
bin/x86_64-linux-cosmo-objcopy
bin/x86_64-linux-cosmo-objdump
bin/x86_64-linux-cosmo-ranlib
bin/x86_64-linux-cosmo-readelf
bin/x86_64-linux-cosmo-size
bin/x86_64-linux-cosmo-strings
bin/x86_64-linux-cosmo-strip
libexec/gcc/x86_64-linux-cosmo/11.2.0/cc1
libexec/gcc/x86_64-linux-cosmo/11.2.0/cc1plus
libexec/gcc/x86_64-linux-cosmo/11.2.0/collect2
'

mkdir -p $RESULTS/bin
mkdir -p $RESULTS/libexec/gcc/x86_64-linux-cosmo/11.2.0/install-tools

for EXE in $FILELIST; do
    apelinkpls $RESULTS/$EXE.com\
        $COSMOS_X86/$EXE\
        $COSMOS_AARCH64/$EXE
done

# cosmo toolchain also has these binaries in the specific locations
DUPELIST2='
as
ld
ld.bfd
'

for EXE in $DUPELIST2; do
    cp $RESULTS/bin/x86_64-linux-cosmo-$EXE.com $RESULTS/libexec/gcc/x86_64-linux-cosmo/11.2.0/$EXE.com
done

# cli
cd "$CONFIGDIR"
mkdir -p share
cp -r $COSMOS_X86/share/terminfo ./share
ls -al /zip

cd $BASELOC
ls -al ./

# bash
apelinkpls $RESULTS/bin/bash.com $COSMOS_X86/bin/bash $COSMOS_AARCH64/bin/bash
cd "$CONFIGDIR"
zip -r $RESULTS/bin/bash.com share/terminfo
cd "$BASELOC"

# berry
apelinkpls $RESULTS/bin/berry.com $COSMOS_X86/bin/berry $COSMOS_AARCH64/bin/berry
cd "$CONFIGDIR"
zip -r $RESULTS/bin/berry.com share/terminfo
cd "$BASELOC"

# less
apelinkpls $RESULTS/bin/less.com $COSMOS_X86/bin/less $COSMOS_AARCH64/bin/less
cd "$CONFIGDIR"
zip -r $RESULTS/bin/less.com share/terminfo
cd "$BASELOC"

# zsh
apelinkpls $RESULTS/bin/zsh.com $COSMOS_X86/bin/zsh $COSMOS_AARCH64/bin/zsh
cd "$CONFIGDIR"
zip -r $RESULTS/bin/zsh.com share/terminfo
cd "$BASELOC"

FILELIST='
echo cp ls mv sha256sum [ test base64 cat chown chmod dd cksum
df dir dirname basename du env expand expr factor join kill link
ln logname id md5sum head mkdir nice nl nproc numfmt od pr pinky
rm pathchk mktemp printenv seq sha1sum sha256sum stat sha384sum
stty sha224sum readlink realpath shred sum tail head uname tty
tsort wc uptime unlink uniq unexpand yes sleep touch true false rmdir
find locate xargs grep'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# cosmo-repo-thirdparty

FILELIST='
greenbean
life
nesemu1
printimage
script
ttyinfo
unbourne
wall
awk
bzip2
ctags
llama
lua
make
qjs
sed
sqlite3
tidy
tree
unzip
zip
zstd
assimilate
pledge
verynice
redbean
'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# compress

FILELIST='
xz
brotli
gzip
pigz
tar
'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# editor

cd "$CONFIGDIR"
mkdir -p share
cp -r $COSMOS_X86/x86_64 ./
cp -r $COSMOS_AARCH64/aarch64 ./
cp -r $COSMOS_X86/share/terminfo ./share
cp -r $COSMOS_X86/share/vim ./share
cp -r $COSMOS_X86/share/nano ./share
cp -r $COSMOS_X86/share/emacs ./share
mkdir -p ./share/ssl/certs/
cp /etc/ssl/certs/*.* ./share/ssl/certs/ || true
ls -al /zip


cd $BASELOC
ls -al ./

# emacs
cd "$BASELOC"
for e in emacs emacsclient; do
    apelinkpls $RESULTS/bin/$e.com $COSMOS_X86/bin/$e $COSMOS_AARCH64/bin/$e
    cd "$CONFIGDIR"
    zip -qr $RESULTS/bin/$e.com \
        share/ssl \
        share/terminfo \
        $(find x86_64 -type f | grep '\.pdmp') \
        $(find aarch64 -type f | grep '\.pdmp') \
        $(find share/emacs -type f |
        grep -v '\.el.gz$' |
        grep -v refcards |
        grep -v images)
done

# vim
cd "$BASELOC"
apelinkpls $RESULTS/bin/vim.com $COSMOS_X86/bin/vim $COSMOS_AARCH64/bin/vim
cd "$CONFIGDIR"
zip -r $RESULTS/bin/vim.com \
    share/terminfo \
    share/vim

# nano
cd "$BASELOC"
apelinkpls $RESULTS/bin/nano.com $COSMOS_X86/bin/nano $COSMOS_AARCH64/bin/nano
cd "$CONFIGDIR"
zip -r $RESULTS/bin/nano.com \
    share/terminfo\
    share/nano

# web

cd "$CONFIGDIR"
mkdir -p share
ls -al /zip


cd $BASELOC
ls -al ./

# wget
apelinkpls $RESULTS/bin/wget.com $COSMOS_X86/bin/wget $COSMOS_AARCH64/bin/wget
cd "$CONFIGDIR"
cp $BASELOC/wget*/wgetrc ./
mkdir -p ./usr/share/ssl/root
cp /etc/ssl/certs/*.* ./usr/share/ssl/root/ || true
zip $RESULTS/bin/wget.com wgetrc
zip -qr $RESULTS/bin/wget.com usr/
cd "$BASELOC"

# curl
apelinkpls $RESULTS/bin/curl.com $COSMOS_X86/bin/curl $COSMOS_AARCH64/bin/curl
cd "$CONFIGDIR"
zip -qr $RESULTS/bin/curl.com usr/
cd "$BASELOC"

# rsync
apelinkpls $RESULTS/bin/rsync.com $COSMOS_X86/bin/rsync $COSMOS_AARCH64/bin/rsync

# git
cd "$CONFIGDIR"
cp -r $COSMOS_X86/share/git-core ./share
mkdir -p $RESULTS/libexec/git-core/mergetools

# these are the unique binaries
BINLIST='
bin/git
bin/git-shell
libexec/git-core/git-sh-i18n--envsubst
libexec/git-core/git-http-backend
libexec/git-core/scalar
libexec/git-core/git-daemon
libexec/git-core/git-http-fetch
libexec/git-core/git-imap-send
libexec/git-core/git-remote-https
libexec/git-core/git-http-push
'
cd "$CONFIGDIR"
for EXE in $BINLIST; do
    apelinkpls $RESULTS/$EXE.com $COSMOS_X86/$EXE $COSMOS_AARCH64/$EXE
    zip -qr $RESULTS/$EXE.com usr/
    zip -qr $RESULTS/$EXE.com share/git-core
done

# these are in /bin but symlinked to git
SYMLIST1='
bin/git-receive-pack
bin/git-upload-pack
bin/git-upload-archive
'

for SYM in $SYMLIST1; do
    # we symlink to git here because that's what it is going to become eventually
    ln -sf git $RESULTS/$SYM.com
done


# these are in /libexec/git-core but symlinked to ../../bin/git-shell
SYMLIST2a='
libexec/git-core/git-shell
'
for SYM in $SYMLIST2a; do
    # we symlink to ../../bin/git here because that's what it is going to become eventually
    ln -sf ../../bin/git-shell $RESULTS/$SYM.com
done

# these are in /libexec/git-core but symlinked to git-remote-http
SYMLIST2b='
libexec/git-core/git-remote-ftp
libexec/git-core/git-remote-ftps
libexec/git-core/git-remote-http
'

for SYM in $SYMLIST2a; do
    # we symlink to git-remote-https here because that's what it is going to become eventually
    ln -sf git-remote-https $RESULTS/$SYM.com
done

# these are in /libexec/git-core but symlinked to ../../bin/git
SYMLIST2='
libexec/git-core/git
libexec/git-core/git-add
libexec/git-core/git-am
libexec/git-core/git-annotate
libexec/git-core/git-apply
libexec/git-core/git-archive
libexec/git-core/git-bisect
libexec/git-core/git-blame
libexec/git-core/git-branch
libexec/git-core/git-bugreport
libexec/git-core/git-bundle
libexec/git-core/git-cat-file
libexec/git-core/git-check-attr
libexec/git-core/git-check-ignore
libexec/git-core/git-check-mailmap
libexec/git-core/git-checkout
libexec/git-core/git-checkout-index
libexec/git-core/git-checkout--worker
libexec/git-core/git-check-ref-format
libexec/git-core/git-cherry
libexec/git-core/git-cherry-pick
libexec/git-core/git-clean
libexec/git-core/git-clone
libexec/git-core/git-column
libexec/git-core/git-commit
libexec/git-core/git-commit-graph
libexec/git-core/git-commit-tree
libexec/git-core/git-config
libexec/git-core/git-count-objects
libexec/git-core/git-credential
libexec/git-core/git-credential-cache
libexec/git-core/git-credential-cache--daemon
libexec/git-core/git-credential-store
libexec/git-core/git-describe
libexec/git-core/git-diagnose
libexec/git-core/git-diff
libexec/git-core/git-diff-files
libexec/git-core/git-diff-index
libexec/git-core/git-difftool
libexec/git-core/git-diff-tree
libexec/git-core/git-fast-export
libexec/git-core/git-fast-import
libexec/git-core/git-fetch
libexec/git-core/git-fetch-pack
libexec/git-core/git-fmt-merge-msg
libexec/git-core/git-for-each-ref
libexec/git-core/git-for-each-repo
libexec/git-core/git-format-patch
libexec/git-core/git-fsck
libexec/git-core/git-fsck-objects
libexec/git-core/git-fsmonitor--daemon
libexec/git-core/git-gc
libexec/git-core/git-get-tar-commit-id
libexec/git-core/git-grep
libexec/git-core/git-hash-object
libexec/git-core/git-help
libexec/git-core/git-hook
libexec/git-core/git-index-pack
libexec/git-core/git-init
libexec/git-core/git-init-db
libexec/git-core/git-interpret-trailers
libexec/git-core/git-log
libexec/git-core/git-ls-files
libexec/git-core/git-ls-remote
libexec/git-core/git-ls-tree
libexec/git-core/git-mailinfo
libexec/git-core/git-mailsplit
libexec/git-core/git-maintenance
libexec/git-core/git-merge
libexec/git-core/git-merge-base
libexec/git-core/git-merge-file
libexec/git-core/git-merge-index
libexec/git-core/git-merge-ours
libexec/git-core/git-merge-recursive
libexec/git-core/git-merge-subtree
libexec/git-core/git-merge-tree
libexec/git-core/git-mktag
libexec/git-core/git-mktree
libexec/git-core/git-multi-pack-index
libexec/git-core/git-mv
libexec/git-core/git-name-rev
libexec/git-core/git-notes
libexec/git-core/git-pack-objects
libexec/git-core/git-pack-redundant
libexec/git-core/git-pack-refs
libexec/git-core/git-patch-id
libexec/git-core/git-prune
libexec/git-core/git-prune-packed
libexec/git-core/git-pull
libexec/git-core/git-push
libexec/git-core/git-range-diff
libexec/git-core/git-read-tree
libexec/git-core/git-rebase
libexec/git-core/git-receive-pack
libexec/git-core/git-reflog
libexec/git-core/git-remote
libexec/git-core/git-remote-ext
libexec/git-core/git-remote-fd
libexec/git-core/git-repack
libexec/git-core/git-replace
libexec/git-core/git-rerere
libexec/git-core/git-reset
libexec/git-core/git-restore
libexec/git-core/git-revert
libexec/git-core/git-rev-list
libexec/git-core/git-rev-parse
libexec/git-core/git-rm
libexec/git-core/git-send-pack
libexec/git-core/git-shortlog
libexec/git-core/git-show
libexec/git-core/git-show-branch
libexec/git-core/git-show-index
libexec/git-core/git-show-ref
libexec/git-core/git-sparse-checkout
libexec/git-core/git-stage
libexec/git-core/git-stash
libexec/git-core/git-status
libexec/git-core/git-stripspace
libexec/git-core/git-submodule--helper
libexec/git-core/git-switch
libexec/git-core/git-symbolic-ref
libexec/git-core/git-tag
libexec/git-core/git-unpack-file
libexec/git-core/git-unpack-objects
libexec/git-core/git-update-index
libexec/git-core/git-update-ref
libexec/git-core/git-update-server-info
libexec/git-core/git-upload-archive
libexec/git-core/git-upload-pack
libexec/git-core/git-var
libexec/git-core/git-verify-commit
libexec/git-core/git-verify-pack
libexec/git-core/git-verify-tag
libexec/git-core/git-version
libexec/git-core/git-whatchanged
libexec/git-core/git-worktree
libexec/git-core/git-write-tree
'

for SYM in $SYMLIST2; do
    # we symlink to ../../bin/git here because that's what it is going to become eventually
    ln -sf ../../bin/git $RESULTS/$SYM.com
done


# These aren't binaries, but some are executable
# not sure how Git will use these

TEXTFILES='
libexec/git-core/git-archimport
libexec/git-core/git-cvsexportcommit
libexec/git-core/git-cvsimport
libexec/git-core/git-cvsserver
libexec/git-core/git-difftool--helper
libexec/git-core/git-filter-branch
libexec/git-core/git-instaweb
libexec/git-core/git-merge-octopus
libexec/git-core/git-merge-one-file
libexec/git-core/git-merge-resolve
libexec/git-core/git-mergetool
libexec/git-core/git-mergetool--lib
libexec/git-core/git-p4
libexec/git-core/git-quiltimport
libexec/git-core/git-request-pull
libexec/git-core/git-send-email
libexec/git-core/git-sh-i18n
libexec/git-core/git-sh-setup
libexec/git-core/git-submodule
libexec/git-core/git-svn
libexec/git-core/git-web--browse
libexec/git-core/mergetools/araxis
libexec/git-core/mergetools/bc
libexec/git-core/mergetools/codecompare
libexec/git-core/mergetools/deltawalker
libexec/git-core/mergetools/diffmerge
libexec/git-core/mergetools/diffuse
libexec/git-core/mergetools/ecmerge
libexec/git-core/mergetools/emerge
libexec/git-core/mergetools/examdiff
libexec/git-core/mergetools/guiffy
libexec/git-core/mergetools/gvimdiff
libexec/git-core/mergetools/kdiff3
libexec/git-core/mergetools/kompare
libexec/git-core/mergetools/meld
libexec/git-core/mergetools/nvimdiff
libexec/git-core/mergetools/opendiff
libexec/git-core/mergetools/p4merge
libexec/git-core/mergetools/smerge
libexec/git-core/mergetools/tkdiff
libexec/git-core/mergetools/tortoisemerge
libexec/git-core/mergetools/vimdiff
libexec/git-core/mergetools/winmerge
libexec/git-core/mergetools/xxdiff
'

for TXT in $TEXTFILES; do
    cp $COSMOS_X86/$TXT $RESULTS/$TXT.com 
done

# datasette

apelinkpls $RESULTS/bin/datasette.com $COSMOS_X86/bin/datasette $COSMOS_AARCH64/bin/datasette
cd $CONFIGDIR
unzip -q $BASELOC/cpy311-datasette/datasette/datasette.com || true
ls -al
mkdir -p build
cp -r $BASELOC/cpy311-datasette/datasette/dummy/lib*aarch64* ./build || true
cp -r $BASELOC/cpy311-datasette/datasette/dummy/lib*x86_64* ./build || true
ls -al build/
zip -qr $RESULTS/bin/datasette.com Lib/
zip -qr $RESULTS/bin/datasette.com build/
rm -rf Lib/ build/
cd "$BASELOC"

# pypack1

apelinkpls $RESULTS/bin/python.com $COSMOS_X86/bin/python $COSMOS_AARCH64/bin/python
cd $CONFIGDIR
unzip -q $BASELOC/cpy311-pypack1/pypack1/python.com || true
ls -al
mkdir -p build
cp -r $BASELOC/cpy311-pypack1/pypack1/dummy/lib*aarch64* ./build || true 
cp -r $BASELOC/cpy311-pypack1/pypack1/dummy/lib*x86_64* ./build || true
ls -al build/
zip -qr $RESULTS/bin/python.com Lib/
zip -qr $RESULTS/bin/python.com build/
rm -rf Lib/ build/
cd "$BASELOC"
