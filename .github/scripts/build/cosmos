#!/usr/bin/env bash
set -e

make ARCH=x86_64 cosmos
make ARCH=aarch64 cosmos

# rm -f cosmo.setup.*

export MODE=
export MODE_AARCH64=aarch64
export BASELOC=$(realpath $PWD)
export COSMO=$BASELOC/cosmopolitan
export COSMOS_X86=$BASELOC/cosmos/x86_64
export COSMOS_AARCH64=$BASELOC/cosmos/aarch64
export CONFIGDIR=$BASELOC/dummy
export RESULTS=$BASELOC/results

APELINK=$COSMO/o//tool/build/apelink.com
APELINKFLAGS=

apelinkpls () {
    OUTPUT="$1"
    OUTPUT_X86_64="$2"
    OUTPUT_AARCH64="$3"
    OLDNAME_X86_64="$(basename -- $OUTPUT_X86_64)"
    OLDNAME_AARCH64="$(basename -- $OUTPUT_AARCH64)"
    TARG_FOLD="$(dirname $OUTPUT)"
    "$APELINK" -l "$COSMO/o/$MODE/ape/ape.elf" \
        -l "$COSMO/o/$MODE_AARCH64/ape/ape.elf" \
        -M "$COSMO/ape/ape-m1.c" \
        -o "$OUTPUT" \
        "$OUTPUT_X86_64" \
        "$OUTPUT_AARCH64"
    cp "$OUTPUT_X86_64" "$TARG_FOLD/$OLDNAME_X86_64.x86_64"
    cp "$OUTPUT_AARCH64" "$TARG_FOLD/$OLDNAME_AARCH64.aarch64"
}

echo "creating fat APEs"
mkdir -p "$CONFIGDIR"
mkdir -p "$RESULTS"

# cli
cd "$CONFIGDIR"
mkdir -p share
cp -r $COSMOS_X86/share/terminfo ./share
ls -al /zip

cd $BASELOC
ls -al ./

# bash
apelinkpls $RESULTS/bin/bash.com $COSMOS_X86/bin/bash $COSMOS_AARCH64/bin/bash
cd "$CONFIGDIR"
zip -r $RESULTS/bin/bash.com share/terminfo
cd "$BASELOC"

# berry
apelinkpls $RESULTS/bin/berry.com $COSMOS_X86/bin/berry $COSMOS_AARCH64/bin/berry
cd "$CONFIGDIR"
zip -r $RESULTS/bin/berry.com share/terminfo
cd "$BASELOC"

# less
apelinkpls $RESULTS/bin/less.com $COSMOS_X86/bin/less $COSMOS_AARCH64/bin/less
cd "$CONFIGDIR"
zip -r $RESULTS/bin/less.com share/terminfo
cd "$BASELOC"

# zsh
apelinkpls $RESULTS/bin/zsh.com $COSMOS_X86/bin/zsh $COSMOS_AARCH64/bin/zsh
cd "$CONFIGDIR"
zip -r $RESULTS/bin/zsh.com share/terminfo
cd "$BASELOC"

FILELIST='
echo cp ls mv sha256sum [ test base64 cat chown chmod dd cksum
df dir dirname basename du env expand expr factor join kill link
ln logname id md5sum head mkdir nice nl nproc numfmt od pr pinky
rm pathchk mktemp printenv seq sha1sum sha256sum stat sha384sum
stty sha224sum readlink realpath shred sum tail head uname tty
tsort wc uptime unlink uniq unexpand yes sleep touch true false rmdir
find locate xargs grep'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# cosmo-repo-thirdparty

FILELIST='
greenbean
life
nesemu1
printimage
script
ttyinfo
unbourne
wall
awk
bzip2
ctags
llama
lua
make
qjs
sed
sqlite3
tidy
tree
unzip
zip
zstd
assimilate
pledge
verynice
redbean
'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# compress

FILELIST='
xz
brotli
gzip
pigz
tar
'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# editor

cd "$CONFIGDIR"
mkdir -p share
cp -r $COSMOS_X86/x86_64 ./
cp -r $COSMOS_AARCH64/aarch64 ./
cp -r $COSMOS_X86/share/terminfo ./share
cp -r $COSMOS_X86/share/vim ./share
cp -r $COSMOS_X86/share/nano ./share
cp -r $COSMOS_X86/share/emacs ./share
mkdir -p ./share/ssl/certs/
cp /etc/ssl/certs/*.* ./share/ssl/certs/ || true
ls -al /zip


cd $BASELOC
ls -al ./

# emacs
cd "$BASELOC"
for e in emacs emacsclient; do
    apelinkpls $RESULTS/bin/$e.com $COSMOS_X86/bin/$e $COSMOS_AARCH64/bin/$e
    cd "$CONFIGDIR"
    zip -qr $RESULTS/bin/$e.com \
        share/ssl \
        share/terminfo \
        $(find x86_64 -type f | grep '\.pdmp') \
        $(find aarch64 -type f | grep '\.pdmp') \
        $(find share/emacs -type f |
        grep -v '\.el.gz$' |
        grep -v refcards |
        grep -v images)
done

# vim
cd "$BASELOC"
apelinkpls $RESULTS/bin/vim.com $COSMOS_X86/bin/vim $COSMOS_AARCH64/bin/vim
cd "$CONFIGDIR"
zip -r $RESULTS/bin/vim.com \
    share/terminfo \
    share/vim

# nano
cd "$BASELOC"
apelinkpls $RESULTS/bin/nano.com $COSMOS_X86/bin/nano $COSMOS_AARCH64/bin/nano
cd "$CONFIGDIR"
zip -r $RESULTS/bin/nano.com \
    share/terminfo\
    share/nano

# datasette

apelinkpls $RESULTS/bin/datasette.com $COSMOS_X86/bin/datasette $COSMOS_AARCH64/bin/datasette
cd $CONFIGDIR
unzip -q $BASELOC/cpy311-datasette/datasette/datasette.com || true
ls -al
mkdir -p build
cp -r $BASELOC/cpy311-datasette/datasette/dummy/lib*aarch64* ./build || true
cp -r $BASELOC/cpy311-datasette/datasette/dummy/lib*x86_64* ./build || true
ls -al build/
zip -qr $RESULTS/bin/datasette.com Lib/
zip -qr $RESULTS/bin/datasette.com build/
rm -rf Lib/ build/ usr/
cd "$BASELOC"

# pypack1

apelinkpls $RESULTS/bin/python.com $COSMOS_X86/bin/python $COSMOS_AARCH64/bin/python
cd $CONFIGDIR
unzip -q $BASELOC/cpy311-pypack1/pypack1/python.com || true
ls -al
mkdir -p build
cp -r $BASELOC/cpy311-pypack1/pypack1/dummy/lib*aarch64* ./build || true 
cp -r $BASELOC/cpy311-pypack1/pypack1/dummy/lib*x86_64* ./build || true
ls -al build/
zip -qr $RESULTS/bin/python.com Lib/
zip -qr $RESULTS/bin/python.com build/
rm -rf Lib/ build/ usr/
cd "$BASELOC"
