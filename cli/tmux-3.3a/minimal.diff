--- tmux-3.3a/input.c	2022-06-09 11:30:50.000000000 +0000
+++ -	2023-11-27 03:43:32.246271476 +0000
@@ -21,7 +21,7 @@
 #include <netinet/in.h>
 
 #include <ctype.h>
-#include <resolv.h>
+// #include <resolv.h>
 #include <stdlib.h>
 #include <string.h>
 #include <time.h>
--- tmux-3.3a/tty-keys.c	2022-06-09 11:30:50.000000000 +0000
+++ -	2023-11-27 03:44:25.829028302 +0000
@@ -23,7 +23,7 @@
 
 #include <ctype.h>
 #include <limits.h>
-#include <resolv.h>
+// #include <resolv.h>
 #include <stdlib.h>
 #include <string.h>
 #include <termios.h>
--- tmux-3.3a/tty.c	2022-06-09 11:30:50.000000000 +0000
+++ -	2023-11-27 03:44:37.742644047 +0000
@@ -24,7 +24,7 @@
 #include <curses.h>
 #include <errno.h>
 #include <fcntl.h>
-#include <resolv.h>
+// #include <resolv.h>
 #include <stdlib.h>
 #include <string.h>
 #include <termios.h>
--- tmux-3.3a/compat/base64.c	2022-06-09 11:30:50.000000000 +0000
+++ -	2023-11-27 03:45:09.815703828 +0000
@@ -49,7 +49,7 @@
-#include <arpa/nameser.h>
+// #include <arpa/nameser.h>
 
 #include <ctype.h>
-#include <resolv.h>
+// #include <resolv.h>
 #include <stdio.h>
 
 #include <stdlib.h>
--- tmux-3.3a/osdep-linux.c	2022-06-09 11:30:50.000000000 +0000
+++ -	2023-11-27 03:48:29.165423396 +0000
@@ -75,7 +75,7 @@
 	n = readlink(path, target, MAXPATHLEN);
 	free(path);
 
-	if (n == -1 && ioctl(fd, TIOCGSID, &sid) != -1) {
+	if (n == -1 /* && ioctl(fd, TIOCGSID, &sid) != -1 */) {
 		xasprintf(&path, "/proc/%lld/cwd", (long long) sid);
 		n = readlink(path, target, MAXPATHLEN);
 		free(path);
--- /dev/null 2023-11-29 02:00:48.294560077 +0000
+++ tmux-3.3a/compat/forkpty-linux.c    2023-11-29 02:00:53.251607893 +0000
@@ -0,0 +1,52 @@
+/* Fork a child process attached to the slave of a pseudo-terminal.
+   Copyright (C) 2010-2023 Free Software Foundation, Inc.
+
+   This file is free software: you can redistribute it and/or modify
+   it under the terms of the GNU Lesser General Public License as
+   published by the Free Software Foundation, either version 3 of the
+   License, or (at your option) any later version.
+
+   This file is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License
+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
+
+# include <unistd.h>
+#include "libc/calls/termios.h"
+
+extern int login_tty (int slave_fd);
+
+int
+forkpty (int *amaster, char *name,
+         const struct termios *termp, const struct winsize *winp)
+{
+  int master, slave, pid;
+
+  if (openpty (&master, &slave, name, termp, winp) == -1)
+    return -1;
+
+  switch (pid = fork ())
+    {
+    case -1:
+      close (master);
+      close (slave);
+      return -1;
+
+    case 0:
+      /* Child.  */
+      close (master);
+      if (login_tty (slave))
+        exit (1);
+      return 0;
+
+    default:
+      /* Parent.  */
+      *amaster = master;
+      close (slave);
+      return pid;
+    }
+}
+
